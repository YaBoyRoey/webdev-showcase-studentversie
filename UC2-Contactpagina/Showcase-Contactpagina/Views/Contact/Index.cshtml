@model Contactform
@{
    ViewData["Title"] = "Contactpagina";
}

<div class="page">
    <section class="contact">

        <h1>Contact</h1>
        <p>@ViewBag.Message</p>
        <form method="post" class="form-contactpagina">
            @Html.AntiForgeryToken()
            <div class="form-contactpagina__inputelement fx-col">
                <label for="firstname">Voornaam: </label>
                <input type="text" asp-for="FirstName" name="firstname" id="firstname" required>
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="lastname">Achternaam: </label>
                <input type="text" asp-for="LastName" name="lastname" id="lastname" required>
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="email">E-mailadres: </label>
                <input type="email" asp-for="Email" name="email" id="email">
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="phone">Telefoonnummer: </label>
                <input type="tel" asp-for="Phone" name="phone" id="phone">
            </div>

            <div class="form-contactpagina__inputelement">
                <input type="submit" value="Verstuur!">
            </div>

        </form>

    </section>
</div>


<script>
   const inputEmail = document.getElementById('email');

   const validateEmail = () => { 
       if (inputEmail.validity.typeMismatch) {
           inputEmail.setCustomValidity("Voer een geldig e-mailadres in!");
           inputEmail.reportValidity();
       } else if (inputEmail.value.length > 80) {
           inputEmail.setCustomValidity("Email moet niet langer dan 80 tekens zijn!");
       } else {
           inputEmail.setCustomValidity("");
       }
   }

   const validateForm = () => {
       validateEmail();
   }

   // Event listener voor email
   inputEmail.addEventListener("blur", validateEmail);
   inputEmail.addEventListener("input", validateEmail);

   // Selecteer het formelement
   const form = document.querySelector('.form-contactpagina');

   // Event listener voor formulierinzending
   form.addEventListener('submit', function (event) {
       event.preventDefault(); // Voorkom standaard formulierinzending

       // Valideer alle velden voor de zekerheid
       validateForm();

       // Verkrijg CSRF-token van het formulier
       const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

       // Serialiseer formuliergegevens
       const formData = new URLSearchParams(new FormData(form));

       formData.append('__RequestVerificationToken', csrfToken); // Voeg CSRF-token toe

       // Voer een POST-verzoek uit
       fetch('/contact', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/x-www-form-urlencoded' // Stel de inhoudstype in
           },
           body: formData // Stuur de geserialiseerde formuliergegevens als de body
       })
           .then(response => {
               if (!response.ok) {
                   console.error('Response status:', response.status);
                   console.error('Response status text:', response.statusText);
                   throw new Error('Netwerkrespons was niet ok');
               }
               return response.text();
           })
           .then(data => {
               // Verwerk succesvolle formulierinzending
               console.log('Formulier succesvol ingediend:', data);
               // Optioneel: je kunt hier een redirect uitvoeren of een succesbericht tonen
           })
           .catch(error => {
               console.error('Er was een probleem met de formulierinzending:', error);
               alert(error.message);
               // Verwerk fouten hier
           });
   });
</script>
